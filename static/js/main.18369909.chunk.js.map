{"version":3,"sources":["components/Loader.tsx","components/SearchInput.tsx","services/characters.ts","state.ts","components/SearchResults.tsx","views/Search.tsx","views/CharacterDetails.tsx","assets/images/star-wars-logo.png","components/Logo.tsx","App.tsx","assets/images/star-background.jpg","theme.ts","index.js"],"names":["StyledLoader","styled","div","Loader","isLoading","children","className","StyledInput","input","theme","colors","primary","SearchInput","debounceTimeout","defaultValue","debounce","onChange","type","autoFocus","target","clearTimeout","setTimeout","value","placeholder","BASE_URL","searchCharacters","term","a","fetch","res","json","results","map","person","id","url","split","at","getCharacterDetails","character","birthYear","birth_year","eyeColor","eye_color","hairColor","hair_color","skinColor","skin_color","characterSearchTermState","atom","key","default","characterResultsState","selector","get","searchTerm","characterDetailsState","selectorFamily","StyledResults","section","StyledResultList","ul","SearchResult","onSelect","characterResults","useRecoilValue","onClick","name","StyledSearchWrapper","Search","history","useHistory","useRecoilState","setSearchTerm","fallback","SearchResults","push","StyledCharacterDetails","StyledClearButton","StyledDetailSection","StyledDetail","CharacterDetails","useParams","goBack","gender","height","mass","StyledMainImage","img","Logo","src","starWarsLogo","alt","App","path","component","exact","to","GlobalStyle","createGlobalStyle","background","render","document","getElementById"],"mappings":"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","file":"static/js/main.18369909.chunk.js","sourcesContent":["import { ReactNode } from 'react'\nimport styled from 'styled-components'\n\ntype Props = {\n  isLoading: boolean\n  children?: ReactNode\n}\n\nconst Loader = ({ isLoading, children }: Props) => (\n  <>\n    {isLoading ? (\n      <StyledLoader>\n        <i className=\"fa fa-2x fa-rebel fa-spin\" />\n      </StyledLoader>\n    ) : (\n      children\n    )}\n  </>\n)\n\nconst StyledLoader = styled.div`\n  margin: 35px;\n`\n\nexport default Loader\n","import { ChangeEvent } from 'react'\nimport styled from 'styled-components'\n\ntype Props = {\n  defaultValue: string\n  debounce: number\n  onChange: (value: string) => void\n}\n\nfunction SearchInput({ defaultValue = '', debounce, onChange }: Props) {\n  let debounceTimeout: ReturnType<typeof setTimeout>\n\n  function debounceInput({ target }: ChangeEvent<HTMLInputElement>) {\n    clearTimeout(debounceTimeout)\n\n    debounceTimeout = setTimeout(() => {\n      onChange(target.value)\n    }, debounce)\n  }\n\n  return (\n    <StyledInput\n      type=\"text\"\n      autoFocus\n      defaultValue={defaultValue}\n      onChange={debounceInput}\n      placeholder=\"Search Characters\"\n    />\n  )\n}\n\nconst StyledInput = styled.input`\n  min-width: 283px;\n  padding: 8px;\n  border: solid 2px ${({ theme }) => theme.colors.primary};\n  background-color: transparent;\n  border-radius: 4px;\n  color: ${({ theme }) => theme.colors.primary};\n  font-size: 20px;\n  text-align: center;\n\n  &:placeholder {\n    color: ${({ theme }) => theme.colors.primary};\n    opacity: 0.5;\n  }\n\n  &:focus {\n    -webkit-focus-ring-color: none;\n    outline: none;\n  }\n`\n\nexport default SearchInput\n","import { Character } from '../types'\n\nconst BASE_URL = 'https://swapi.dev/api/people'\n\nexport async function searchCharacters(term: string): Promise<any> {\n  const res = await fetch(`${BASE_URL}/?search=${term}`)\n  const { results = [] } = await res.json()\n\n  return results.map((person: any) => ({\n    ...person,\n    // Map id for ease of use later\n    id: person.url.split('/').at(-2),\n  }))\n}\n\nexport async function getCharacterDetails(id: string): Promise<Character> {\n  const res = await fetch(`${BASE_URL}/${id}`)\n  const character = await res.json()\n\n  return {\n    ...character,\n    birthYear: character.birth_year,\n    eyeColor: character.eye_color,\n    hairColor: character.hair_color,\n    skinColor: character.skin_color,\n  }\n}\n","import { atom, selector, selectorFamily } from 'recoil'\nimport { searchCharacters, getCharacterDetails } from './services/characters'\nimport { Character } from './types'\n\n// Atoms\nexport const characterSearchTermState = atom({\n  key: 'characterSearchTerm',\n  default: '',\n})\n\n// Selectors\nexport const characterResultsState = selector<Character[]>({\n  key: 'characterResults',\n  get: async ({ get }) => {\n    const searchTerm = get(characterSearchTermState)\n\n    if (searchTerm) {\n      const results = await searchCharacters(searchTerm)\n      return results\n    }\n\n    return []\n  },\n})\n\nexport const characterDetailsState = selectorFamily({\n  key: 'characterDetails',\n  get: (id: string) => async (): Promise<Character | null> => {\n    if (id) {\n      const character = await getCharacterDetails(id)\n      return character\n    }\n\n    return null\n  },\n})\n","import styled from 'styled-components'\nimport { useRecoilValue } from 'recoil'\nimport { characterResultsState } from '../state'\n\ntype Props = {\n  onSelect: (id: string) => void\n}\n\nconst SearchResult = ({ onSelect }: Props) => {\n  const characterResults = useRecoilValue(characterResultsState)\n\n  return (\n    <StyledResults>\n      <StyledResultList>\n        {characterResults.map(character => (\n          <li key={character.name} onClick={() => onSelect(character.id)}>\n            {character.name}\n          </li>\n        ))}\n      </StyledResultList>\n    </StyledResults>\n  )\n}\n\nconst StyledResults = styled.section`\n  display: flex;\n  justify-content: center;\n  height: 800px;\n  perspective: 985px;\n  font-size: 255%;\n  font-weight: 600;\n  letter-spacing: 4px;\n  line-height: 150%;\n  text-align: justify;\n\n  @media (max-width: 650px) {\n    font-size: 208%;\n  }\n\n  @media (max-width: 445px) {\n    font-size: 165%;\n  }\n`\n\nconst StyledResultList = styled.ul`\n  position: relative;\n  top: -525px;\n  max-width: 835px;\n  text-align: center;\n  list-style-type: none;\n  margin: 0px;\n  padding: 0px;\n  transform-origin: 50% 100%;\n  transform: rotateX(46deg) translateZ(-100px);\n\n  li {\n    padding: 0 0 8px 0;\n    cursor: pointer;\n  }\n`\n\nexport default SearchResult\n","import { Suspense } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { useRecoilState } from 'recoil'\nimport styled from 'styled-components'\nimport Loader from '../components/Loader'\nimport SearchInput from '../components/SearchInput'\nimport SearchResults from '../components/SearchResults'\nimport { characterSearchTermState } from '../state'\n\nconst Search = () => {\n  const history = useHistory()\n  const [searchTerm, setSearchTerm] = useRecoilState(characterSearchTermState)\n\n  return (\n    <StyledSearchWrapper>\n      <SearchInput\n        defaultValue={searchTerm}\n        debounce={500}\n        onChange={setSearchTerm}\n      />\n      <Suspense fallback={<Loader isLoading />}>\n        <SearchResults onSelect={id => history.push(`/details/${id}`)} />\n      </Suspense>\n    </StyledSearchWrapper>\n  )\n}\n\nconst StyledSearchWrapper = styled.div`\n  height: 290px;\n  text-align: center;\n`\n\nexport default Search\n","import { useRecoilValue } from 'recoil'\nimport styled from 'styled-components'\nimport { useHistory, useParams } from 'react-router-dom'\nimport { characterDetailsState } from '../state'\n\nconst CharacterDetails = () => {\n  const { id } = useParams<{ id: string }>()\n  const history = useHistory()\n  const character = useRecoilValue(characterDetailsState(id))\n\n  if (!character) {\n    return null\n  }\n\n  return (\n    <StyledCharacterDetails>\n      <h2>{character.name}</h2>\n      <StyledClearButton onClick={() => history.goBack()}>X</StyledClearButton>\n      <StyledDetailSection>\n        <StyledDetail>Gender: {character.gender}</StyledDetail>\n        <StyledDetail>Birth Year: {character.birthYear}</StyledDetail>\n        <StyledDetail>Height: {character.height}</StyledDetail>\n        <StyledDetail>Mass: {character.mass}</StyledDetail>\n      </StyledDetailSection>\n      <StyledDetailSection>\n        <StyledDetail>Eye Color: {character.eyeColor}</StyledDetail>\n        <StyledDetail>Hair Color: {character.hairColor}</StyledDetail>\n        <StyledDetail>Skin Color: {character.skinColor}</StyledDetail>\n      </StyledDetailSection>\n    </StyledCharacterDetails>\n  )\n}\n\nconst StyledCharacterDetails = styled.div`\n  position: relative;\n  right: 0;\n  left: 0;\n  width: 70%;\n  max-width: 400px;\n  margin: 0 auto;\n  padding: 10px;\n  border: solid 3px;\n  border-radius: 5px;\n\n  h2 {\n    margin: 0;\n  }\n\n  @media (max-width: 400px) {\n    max-width: 100%;\n  }\n`\n\nconst StyledClearButton = styled.div`\n  position: absolute;\n  right: 10px;\n  top: 5px;\n  cursor: pointer;\n  font-weight: 800;\n`\n\nconst StyledDetailSection = styled.div`\n  display: inline-block;\n  width: 48%;\n  padding: 10px 1%;\n  vertical-align: top;\n  text-transform: capitalize;\n\n  @media (max-width: 400px) {\n    width: 100%;\n  }\n`\n\nconst StyledDetail = styled.div`\n  padding: 4px;\n`\n\nexport default CharacterDetails\n","export default __webpack_public_path__ + \"static/media/star-wars-logo.1a9c7a92.png\";","import styled from 'styled-components'\nimport starWarsLogo from '../assets/images/star-wars-logo.png'\n\nconst Logo = () => (\n  <StyledMainImage src={starWarsLogo} alt=\"Star Wars: React App\" />\n)\n\nconst StyledMainImage = styled.img`\n  max-width: 320px;\n  margin-bottom: 40px;\n`\n\nexport default Logo\n","import { Suspense } from 'react'\nimport { Switch, Route, Redirect } from 'react-router-dom'\nimport Search from './views/Search'\nimport CharacterDetails from './views/CharacterDetails'\nimport Logo from './components/Logo'\n\nconst App = () => (\n  <>\n    <Logo />\n    <Switch>\n      <Suspense fallback={null}>\n        <Route path=\"/\" component={Search} exact />\n        <Route path=\"/details/:id\" component={CharacterDetails} />\n        <Redirect to=\"/\" />\n      </Suspense>\n    </Switch>\n  </>\n)\n\nexport default App\n","export default __webpack_public_path__ + \"static/media/star-background.15ac1963.jpg\";","import { createGlobalStyle, DefaultTheme } from 'styled-components'\nimport background from './assets/images/star-background.jpg'\n\nexport const theme: DefaultTheme = {\n  colors: {\n    primary: '#e8e400',\n  },\n}\n\nexport const GlobalStyle = createGlobalStyle`\n html,\n  body {\n    height: 100%;\n    margin: 0;\n    padding: 0;\n    font-size: 20px;\n    background: url(${background}) no-repeat center center;\n    background-size: cover;\n    overflow: hidden;\n    box-sizing: border-box;\n    font-family: arial, sans-serif;\n  }\n\n  .main {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    margin: 10vh 0 0 0;\n    color: ${({ theme }) => theme.colors.primary};\n  }\n`\n","import { render } from 'react-dom'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport { ThemeProvider } from 'styled-components'\nimport { RecoilRoot } from 'recoil'\nimport App from './App'\nimport { GlobalStyle, theme } from './theme'\n\nrender(\n  <RecoilRoot>\n    <Router>\n      <ThemeProvider theme={theme}>\n        <GlobalStyle />\n        <App />\n      </ThemeProvider>\n    </Router>\n  </RecoilRoot>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}